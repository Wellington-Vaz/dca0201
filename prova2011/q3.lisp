(defun deriv (x)
  (setq ret '())
  (setq n (list-length x))
  (setq i (- n 1))
  (loop 
   (when (= i 0) (return (reverse ret)))
   (push (* i (pop x)) ret)
   (setq i (- i 1))))

(defun exibe (x)
  (setq n (- (list-length x) 1))
  (setq n0 n)
  (loop 
   (when (= n -1) (return))
   (setq coef (pop x))
   (if (> coef 0)
       (if (= n n0) 
	   (format t "~S*x^~S" (abs coef) n)
	 (if (= n 0) (format t "+~S" (abs coef) n)
	    (format t "+~S*x^~S" (abs coef) n))))
   (if (< coef 0)
       (if (= n 0) (format t "-~S" (abs coef) n)
	    (format t "-~S*x^~S" (abs coef) n)))
   (setq n (- n 1))
   ))
